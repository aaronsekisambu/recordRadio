{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var initialState = {\n  appLoading: false,\n  alert: null\n};\nexport var appSlice = createSlice({\n  name: 'app',\n  initialState: initialState,\n  reducers: {\n    setAppLoading: function setAppLoading(state, _ref) {\n      var payload = _ref.payload;\n      state.appLoading = payload;\n    },\n    setAppAlert: function setAppAlert(state, action) {\n      state.alert = action.payload;\n    },\n    clearAlert: function clearAlert(state) {\n      state.alert = null;\n    }\n  }\n});\nvar _appSlice$actions = appSlice.actions,\n  setAppLoading = _appSlice$actions.setAppLoading,\n  setAppAlert = _appSlice$actions.setAppAlert,\n  clearAlert = _appSlice$actions.clearAlert;\nexport { setAppLoading, setAppAlert, clearAlert };\nexport var appSelector = function appSelector(state) {\n  return state.app;\n};\nexport default appSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","appLoading","alert","appSlice","name","reducers","setAppLoading","state","_ref","payload","setAppAlert","action","clearAlert","_appSlice$actions","actions","appSelector","app","reducer"],"sources":["/Users/aaron/Documents/Aaron/Code/recordRadio/src/reduxs/reducers/app-reducer.ts"],"sourcesContent":["import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {RootState} from '../store';\n\nexport interface IAppState {\n  appLoading: boolean;\n  alert: {\n    type: 'notification' | 'success' | 'error';\n    title: string;\n    message: string;\n  } | null;\n}\n\nexport const initialState: IAppState = {\n  appLoading: false,\n  alert: null,\n};\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setAppLoading: (state: IAppState, {payload}: PayloadAction<boolean>) => {\n      state.appLoading = payload;\n    },\n    setAppAlert: (\n      state,\n      action: PayloadAction<{\n        type: 'notification' | 'success' | 'error';\n        message: string;\n        title: string;\n      } | null>,\n    ) => {\n      state.alert = action.payload;\n    },\n    clearAlert: state => {\n      state.alert = null;\n    },\n  },\n});\n\nexport const {setAppLoading, setAppAlert, clearAlert} = appSlice.actions;\n\nexport const appSelector = (state: RootState) => state.app;\n\nexport default appSlice.reducer;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAsB,kBAAkB;AAY3D,OAAO,IAAMC,YAAuB,GAAG;EACrCC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,IAAMC,QAAQ,GAAGJ,WAAW,CAAC;EAClCK,IAAI,EAAE,KAAK;EACXJ,YAAY,EAAZA,YAAY;EACZK,QAAQ,EAAE;IACRC,aAAa,EAAE,SAAAA,cAACC,KAAgB,EAAAC,IAAA,EAAwC;MAAA,IAArCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;MACxCF,KAAK,CAACN,UAAU,GAAGQ,OAAO;IAC5B,CAAC;IACDC,WAAW,EAAE,SAAAA,YACXH,KAAK,EACLI,MAIS,EACN;MACHJ,KAAK,CAACL,KAAK,GAAGS,MAAM,CAACF,OAAO;IAC9B,CAAC;IACDG,UAAU,EAAE,SAAAA,WAAAL,KAAK,EAAI;MACnBA,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEK,IAAAW,iBAAA,GAAiDV,QAAQ,CAACW,OAAO;EAA1DR,aAAa,GAAAO,iBAAA,CAAbP,aAAa;EAAEI,WAAW,GAAAG,iBAAA,CAAXH,WAAW;EAAEE,UAAU,GAAAC,iBAAA,CAAVD,UAAU;AAAqB,SAAAN,aAAA,EAAAI,WAAA,EAAAE,UAAA;AAEzE,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAIR,KAAgB;EAAA,OAAKA,KAAK,CAACS,GAAG;AAAA;AAE1D,eAAeb,QAAQ,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}