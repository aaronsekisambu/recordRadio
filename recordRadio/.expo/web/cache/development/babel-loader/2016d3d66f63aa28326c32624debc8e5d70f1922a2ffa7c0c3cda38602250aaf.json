{"ast":null,"code":"import numeral from 'numeral';\nvar formatLimit = function formatLimit(amount) {\n  var _currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$';\n  var textResult = \"\" + _currency;\n  try {\n    if (isNaN(parseFloat(amount))) {\n      textResult += numeral(parseFloat(amount.replace(',', ''))).format('0,0.00a');\n    } else {\n      textResult += numeral(parseFloat(amount)).format('0,0.00a');\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return textResult;\n};\nvar formatLimitBasic = function formatLimitBasic(amount) {\n  var textResult = '';\n  try {\n    if (isNaN(parseFloat(amount))) {\n      textResult += numeral(parseFloat(amount.replace(',', ''))).format('0,0a');\n    } else {\n      textResult += parseFloat(amount) > Math.pow(10, 10) ? numeral(parseFloat(amount)).format('0,0a') : numeral(parseFloat(amount)).format('0,0');\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return textResult;\n};\nvar formatLimitBasicCurrency = function formatLimitBasicCurrency(amount) {\n  var _currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$';\n  var textResult = \"\" + _currency;\n  try {\n    if (isNaN(parseFloat(amount))) {\n      textResult += numeral(parseFloat(amount.replace(',', ''))).format('0,0a');\n    } else {\n      textResult += parseFloat(amount) > Math.pow(10, 10) ? numeral(parseFloat(amount)).format('0,0a') : numeral(parseFloat(amount)).format('0,0');\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return textResult;\n};\nvar formatDefault = function formatDefault(amount) {\n  var _currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$';\n  var textResult = \"\" + _currency;\n  try {\n    if (isNaN(parseFloat(amount))) {\n      textResult += numeral(parseFloat(amount.replace(',', ''))).format('0,0.00');\n    } else {\n      textResult += numeral(parseFloat(amount)).format('0,0.00');\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return textResult;\n};\nvar formatSecure = function formatSecure() {\n  return \"***** USD\";\n};\nexport { formatLimit, formatDefault, formatSecure, formatLimitBasic, formatLimitBasicCurrency };","map":{"version":3,"names":["numeral","formatLimit","amount","_currency","arguments","length","undefined","textResult","isNaN","parseFloat","replace","format","e","console","log","formatLimitBasic","Math","pow","formatLimitBasicCurrency","formatDefault","formatSecure"],"sources":["/Users/aaron/Documents/Aaron/Code/recordRadio/src/utils/formatNumber.ts"],"sourcesContent":["import numeral from 'numeral';\n\nconst formatLimit = (amount: string, _currency = '$') => {\n  let textResult = `${_currency}`;\n  try {\n    if (isNaN(parseFloat(amount))) {\n      textResult += numeral(parseFloat(amount.replace(',', ''))).format('0,0.00a');\n    } else {\n      textResult += numeral(parseFloat(amount)).format('0,0.00a');\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return textResult;\n};\n\nconst formatLimitBasic = (amount: string) => {\n  let textResult = '';\n  try {\n    if (isNaN(parseFloat(amount))) {\n      textResult += numeral(parseFloat(amount.replace(',', ''))).format('0,0a');\n    } else {\n      textResult +=\n        parseFloat(amount) > Math.pow(10, 10)\n          ? numeral(parseFloat(amount)).format('0,0a')\n          : numeral(parseFloat(amount)).format('0,0');\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return textResult;\n};\n\nconst formatLimitBasicCurrency = (amount: string, _currency = '$') => {\n  let textResult = `${_currency}`;\n  try {\n    if (isNaN(parseFloat(amount))) {\n      textResult += numeral(parseFloat(amount.replace(',', ''))).format('0,0a');\n    } else {\n      textResult +=\n        parseFloat(amount) > Math.pow(10, 10)\n          ? numeral(parseFloat(amount)).format('0,0a')\n          : numeral(parseFloat(amount)).format('0,0');\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return textResult;\n};\n\nconst formatDefault = (amount: string, _currency = '$') => {\n  let textResult = `${_currency}`;\n  try {\n    if (isNaN(parseFloat(amount))) {\n      textResult += numeral(parseFloat(amount.replace(',', ''))).format('0,0.00');\n    } else {\n      textResult += numeral(parseFloat(amount)).format('0,0.00');\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return textResult;\n};\n\nconst formatSecure = () => {\n  return `***** USD`;\n};\n\nexport { formatLimit, formatDefault, formatSecure, formatLimitBasic, formatLimitBasicCurrency };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}