{"ast":null,"code":"import * as shape from 'd3-shape';\nimport { scale } from 'react-native-size-scaling';\nvar line = function line(width, height) {\n  var path = shape.line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  })([{\n    x: width / 2,\n    y: 0\n  }, {\n    x: width,\n    y: 0\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: 0,\n    y: height\n  }, {\n    x: 0,\n    y: 0\n  }, {\n    x: width / 2,\n    y: 0\n  }]);\n  return path;\n};\nvar lineBorder = function lineBorder(width, height) {\n  var border = shape.line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  }).curve(shape.curveBasis)([{\n    x: width / 2,\n    y: 0\n  }, {\n    x: width - scale(20),\n    y: 0\n  }, {\n    x: width - scale(10),\n    y: scale(2)\n  }, {\n    x: width - scale(2),\n    y: scale(10)\n  }, {\n    x: width,\n    y: scale(20)\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: 0,\n    y: height\n  }, {\n    x: 0,\n    y: height\n  }, {\n    x: 0,\n    y: height\n  }, {\n    x: 0,\n    y: scale(20)\n  }, {\n    x: 0 + scale(2),\n    y: scale(10)\n  }, {\n    x: 0 + scale(10),\n    y: scale(2)\n  }, {\n    x: 0 + scale(20),\n    y: 0\n  }, {\n    x: width / 2,\n    y: 0\n  }]);\n  return border;\n};\nvar lineBorderLeft = function lineBorderLeft(width, height) {\n  var border = shape.line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  }).curve(shape.curveBasis)([{\n    x: width,\n    y: 0\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: 0,\n    y: height\n  }, {\n    x: 0,\n    y: height\n  }, {\n    x: 0,\n    y: height\n  }, {\n    x: 0,\n    y: scale(20)\n  }, {\n    x: 0 + scale(2),\n    y: scale(10)\n  }, {\n    x: 0 + scale(10),\n    y: scale(2)\n  }, {\n    x: 0 + scale(20),\n    y: 0\n  }, {\n    x: width / 2,\n    y: 0\n  }]);\n  return border;\n};\nvar lineBorderRight = function lineBorderRight(width, height) {\n  var border = shape.line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  }).curve(shape.curveBasis)([{\n    x: width / 2,\n    y: 0\n  }, {\n    x: width - scale(20),\n    y: 0\n  }, {\n    x: width - scale(10),\n    y: scale(2)\n  }, {\n    x: width - scale(2),\n    y: scale(10)\n  }, {\n    x: width,\n    y: scale(20)\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: width,\n    y: height\n  }, {\n    x: 0,\n    y: height\n  }, {\n    x: 0,\n    y: height\n  }, {\n    x: 0,\n    y: 0\n  }]);\n  return border;\n};\nvar lineCurved = function lineCurved(iPosition, height, circle) {\n  var position = iPosition;\n  var circleWidth = circle + position;\n  var trim = (position + circleWidth) / 2;\n  var curved = shape.line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  }).curve(shape.curveBasis)([{\n    x: position - scale(20),\n    y: 0\n  }, {\n    x: position - scale(10),\n    y: scale(2)\n  }, {\n    x: position - scale(2),\n    y: scale(10)\n  }, {\n    x: position,\n    y: scale(17)\n  }, {\n    x: trim - scale(25),\n    y: height / 2 + scale(2)\n  }, {\n    x: trim - scale(10),\n    y: height / 2 + scale(10)\n  }, {\n    x: trim,\n    y: height / 2 + scale(10)\n  }, {\n    x: trim + scale(10),\n    y: height / 2 + scale(10)\n  }, {\n    x: trim + scale(25),\n    y: height / 2 + scale(2)\n  }, {\n    x: circleWidth,\n    y: scale(17)\n  }, {\n    x: circleWidth + scale(2),\n    y: scale(10)\n  }, {\n    x: circleWidth + scale(10),\n    y: 0\n  }, {\n    x: circleWidth + scale(20),\n    y: 0\n  }]);\n  return curved;\n};\nexport var getPathDown = function getPathDown(width, iHeight, centerWidth) {\n  var borderTopLeftRight = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var position = arguments.length > 4 ? arguments[4] : undefined;\n  var height = scale(iHeight);\n  var circleWidth = scale(centerWidth) + scale(16);\n  if (borderTopLeftRight && position === 'LEFT') {\n    return lineBorderRight(width, height) + \" \" + lineCurved(circleWidth / 3, height, circleWidth);\n  }\n  if (borderTopLeftRight && position === 'RIGHT') {\n    return lineBorderLeft(width, height) + \" \" + lineCurved(width - circleWidth * 1.33, height, circleWidth);\n  }\n  if (borderTopLeftRight && position === 'CENTER') {\n    return lineBorder(width, height) + \" \" + lineCurved(width / 2 - circleWidth / 2, height, circleWidth);\n  }\n  if (position === 'LEFT') {\n    return line(width, height) + \" \" + lineCurved(circleWidth / 3, height, circleWidth);\n  }\n  if (position === 'RIGHT') {\n    return line(width, height) + \" \" + lineCurved(width - circleWidth * 1.33, height, circleWidth);\n  }\n  return line(width, height) + \" \" + lineCurved(width / 2 - circleWidth / 2, height, circleWidth);\n};","map":{"version":3,"names":["shape","scale","line","width","height","path","x","d","y","lineBorder","border","curve","curveBasis","lineBorderLeft","lineBorderRight","lineCurved","iPosition","circle","position","circleWidth","trim","curved","getPathDown","iHeight","centerWidth","borderTopLeftRight","arguments","length","undefined"],"sources":["/Users/aaron/Documents/Aaron/Code/recordRadio/node_modules/react-native-curved-bottom-bar/src/CurvedBottomBar/utils/pathDown.ts"],"sourcesContent":["import * as shape from 'd3-shape';\nimport { scale } from 'react-native-size-scaling';\n\n//** Path Line */\nconst line = (width: number, height: number) => {\n  const path = (shape as any)\n    .line()\n    .x((d: { x: any }) => d.x)\n    .y((d: { y: any }) => d.y)([\n    { x: width / 2, y: 0 },\n    { x: width, y: 0 },\n    { x: width, y: height },\n    { x: 0, y: height },\n    { x: 0, y: 0 },\n    { x: width / 2, y: 0 },\n  ]);\n\n  return path;\n};\n\n//** Path Line Border Left Right Down */\nconst lineBorder = (width: number, height: number) => {\n  const border = (shape as any)\n    .line()\n    .x((d: { x: any }) => d.x)\n    .y((d: { y: any }) => d.y)\n    .curve(shape.curveBasis)([\n    // right\n    { x: width / 2, y: 0 },\n    { x: width - scale(20), y: 0 },\n    { x: width - scale(10), y: scale(2) },\n    { x: width - scale(2), y: scale(10) },\n    { x: width, y: scale(20) },\n    { x: width, y: height },\n    { x: width, y: height },\n    // bottom\n    { x: width, y: height },\n    { x: 0, y: height },\n    // left\n    { x: 0, y: height },\n    { x: 0, y: height },\n    { x: 0, y: scale(20) },\n    { x: 0 + scale(2), y: scale(10) },\n    { x: 0 + scale(10), y: scale(2) },\n    { x: 0 + scale(20), y: 0 },\n    { x: width / 2, y: 0 },\n  ]);\n\n  return border;\n};\n\n//** Path Line Border Left Right Down */\nconst lineBorderLeft = (width: number, height: number) => {\n  const border = (shape as any)\n    .line()\n    .x((d: { x: any }) => d.x)\n    .y((d: { y: any }) => d.y)\n    .curve(shape.curveBasis)([\n    // right\n    { x: width, y: 0 },\n    { x: width, y: height },\n    { x: width, y: height },\n    // bottom\n    { x: width, y: height },\n    { x: 0, y: height },\n    // left\n    { x: 0, y: height },\n    { x: 0, y: height },\n    { x: 0, y: scale(20) },\n    { x: 0 + scale(2), y: scale(10) },\n    { x: 0 + scale(10), y: scale(2) },\n    { x: 0 + scale(20), y: 0 },\n    { x: width / 2, y: 0 },\n  ]);\n\n  return border;\n};\n\n//** Path Line Border Left Right Down */\nconst lineBorderRight = (width: number, height: number) => {\n  const border = (shape as any)\n    .line()\n    .x((d: { x: any }) => d.x)\n    .y((d: { y: any }) => d.y)\n    .curve(shape.curveBasis)([\n    // right\n    { x: width / 2, y: 0 },\n    { x: width - scale(20), y: 0 },\n    { x: width - scale(10), y: scale(2) },\n    { x: width - scale(2), y: scale(10) },\n    { x: width, y: scale(20) },\n    { x: width, y: height },\n    { x: width, y: height },\n    // bottom\n    { x: width, y: height },\n    { x: 0, y: height },\n    // left\n    { x: 0, y: height },\n    { x: 0, y: 0 },\n  ]);\n\n  return border;\n};\n\n//** Path Curved Down Left */\nconst lineCurved = (iPosition: number, height: number, circle: number) => {\n  const position = iPosition;\n  const circleWidth = circle + position;\n  const trim = (position + circleWidth) / 2;\n\n  const curved = (shape as any)\n    .line()\n    .x((d: { x: any }) => d.x)\n    .y((d: { y: any }) => d.y)\n    .curve(shape.curveBasis)([\n    { x: position - scale(20), y: 0 }, // border center left\n    { x: position - scale(10), y: scale(2) },\n    { x: position - scale(2), y: scale(10) },\n    { x: position, y: scale(17) },\n\n    { x: trim - scale(25), y: height / 2 + scale(2) },\n    { x: trim - scale(10), y: height / 2 + scale(10) },\n    { x: trim, y: height / 2 + scale(10) },\n    { x: trim + scale(10), y: height / 2 + scale(10) },\n    { x: trim + scale(25), y: height / 2 + scale(2) },\n\n    { x: circleWidth, y: scale(17) }, // border center right\n    { x: circleWidth + scale(2), y: scale(10) },\n    { x: circleWidth + scale(10), y: 0 },\n    { x: circleWidth + scale(20), y: 0 },\n  ]);\n\n  return curved;\n};\n\nexport const getPathDown = (\n  width: number,\n  iHeight: number,\n  centerWidth: number,\n  borderTopLeftRight = false,\n  position: 'CENTER' | 'LEFT' | 'RIGHT'\n) => {\n  const height = scale(iHeight);\n  const circleWidth = scale(centerWidth) + scale(16);\n\n  if (borderTopLeftRight && position === 'LEFT') {\n    return `${lineBorderRight(width, height)} ${lineCurved(\n      circleWidth / 3,\n      height,\n      circleWidth\n    )}`;\n  }\n\n  if (borderTopLeftRight && position === 'RIGHT') {\n    return `${lineBorderLeft(width, height)} ${lineCurved(\n      width - circleWidth * 1.33,\n      height,\n      circleWidth\n    )}`;\n  }\n\n  if (borderTopLeftRight && position === 'CENTER') {\n    return `${lineBorder(width, height)} ${lineCurved(\n      width / 2 - circleWidth / 2,\n      height,\n      circleWidth\n    )}`;\n  }\n\n  if (position === 'LEFT') {\n    return `${line(width, height)} ${lineCurved(\n      circleWidth / 3,\n      height,\n      circleWidth\n    )}`;\n  }\n\n  if (position === 'RIGHT') {\n    return `${line(width, height)} ${lineCurved(\n      width - circleWidth * 1.33,\n      height,\n      circleWidth\n    )}`;\n  }\n\n  return `${line(width, height)} ${lineCurved(\n    width / 2 - circleWidth / 2,\n    height,\n    circleWidth\n  )}`;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}