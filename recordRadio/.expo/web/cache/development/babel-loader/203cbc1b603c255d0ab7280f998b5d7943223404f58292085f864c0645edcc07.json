{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport rootReducer from \"./reducers/rootReducer\";\nvar store = configureStore({\n  reducer: rootReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: false\n    });\n  }\n});\nexport var useAppDispatch = function useAppDispatch() {\n  return useDispatch();\n};\nexport var useAppSelector = useSelector;\nexport default store;","map":{"version":3,"names":["configureStore","useDispatch","useSelector","rootReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","useAppDispatch","useAppSelector"],"sources":["/Users/aaron/Documents/Aaron/Code/recordRadio/src/reduxs/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport const useAppDispatch = (): AppDispatch => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,QAA6B,kBAAkB;AACtE,SAASC,WAAW,EAAEC,WAAW,QAA8B,aAAa;AAC5E,OAAOC,WAAW;AAElB,IAAMC,KAAK,GAAGJ,cAAc,CAAC;EAC3BK,OAAO,EAAEF,WAAW;EACpBG,UAAU,EAAE,SAAAA,WAACC,oBAAoB;IAAA,OAC/BA,oBAAoB,CAAC;MACnBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;EAAA;AACN,CAAC,CAAC;AAWF,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAAsBR,WAAW,CAAc,CAAC;AAAA;AAC3E,OAAO,IAAMS,cAA+C,GAAGR,WAAW;AAC1E,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}