{"ast":null,"code":"import * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Images } from \"../../assets/images\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ThemeLogo = function ThemeLogo(_ref) {\n  var source = _ref.source,\n    style = _ref.style,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 40 : _ref$size,\n    onPress = _ref.onPress;\n  var getSource = function getSource() {\n    if (source) {\n      return source;\n    } else {\n      return Images.dark_logo;\n    }\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    activeOpacity: 0.7,\n    children: _jsx(Image, {\n      source: getSource(),\n      style: [styles.image, {\n        width: size,\n        height: size\n      }, style]\n    })\n  });\n};\nexport default ThemeLogo;\nvar styles = StyleSheet.create({\n  image: {\n    width: 40,\n    height: 40\n  }\n});","map":{"version":3,"names":["React","Image","StyleSheet","TouchableOpacity","Images","jsx","_jsx","ThemeLogo","_ref","source","style","_ref$size","size","onPress","getSource","dark_logo","activeOpacity","children","styles","image","width","height","create"],"sources":["/Users/aaron/Documents/Aaron/Code/recordRadio/src/elements/App/ThemeLogo.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Image, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Images } from 'assets/images';\n// ----------------------------- @Types -----------------------------------\nimport { IThemeLogoProps } from 'types/element-types';\n\nconst ThemeLogo = ({ source, style, size = 40, onPress }: IThemeLogoProps) => {\n  const getSource = () => {\n    if (source) {\n      return source;\n    } else {\n      return Images.dark_logo;\n    }\n  };\n  return (\n    <TouchableOpacity onPress={onPress} activeOpacity={0.7}>\n      <Image source={getSource()} style={[styles.image, { width: size, height: size }, style]} />\n    </TouchableOpacity>\n  );\n};\n\nexport default ThemeLogo;\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 40,\n    height: 40,\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAE/B,SAASC,MAAM;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAIvC,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAA+D;EAAA,IAAzDC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAAC,SAAA,GAAAH,IAAA,CAAEI,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,EAAE,GAAAA,SAAA;IAAEE,OAAO,GAAAL,IAAA,CAAPK,OAAO;EACpD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtB,IAAIL,MAAM,EAAE;MACV,OAAOA,MAAM;IACf,CAAC,MAAM;MACL,OAAOL,MAAM,CAACW,SAAS;IACzB;EACF,CAAC;EACD,OACET,IAAA,CAACH,gBAAgB;IAACU,OAAO,EAAEA,OAAQ;IAACG,aAAa,EAAE,GAAI;IAAAC,QAAA,EACrDX,IAAA,CAACL,KAAK;MAACQ,MAAM,EAAEK,SAAS,CAAC,CAAE;MAACJ,KAAK,EAAE,CAACQ,MAAM,CAACC,KAAK,EAAE;QAAEC,KAAK,EAAER,IAAI;QAAES,MAAM,EAAET;MAAK,CAAC,EAAEF,KAAK;IAAE,CAAE;EAAC,CAC3E,CAAC;AAEvB,CAAC;AAED,eAAeH,SAAS;AAExB,IAAMW,MAAM,GAAGhB,UAAU,CAACoB,MAAM,CAAC;EAC/BH,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}