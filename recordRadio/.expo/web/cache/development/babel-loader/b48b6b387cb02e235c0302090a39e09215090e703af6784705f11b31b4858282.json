{"ast":null,"code":"var fillNumberLength = function fillNumberLength(input, inputLength) {\n  var cardNumber = input.replace(/\\D/g, \"\");\n  var cardNum = cardNumber.substring(0, inputLength);\n  var output = \"\";\n  if (cardNum.length < inputLength) {\n    var numOfSpace = inputLength - cardNum.length;\n    output = cardNum + \"*\".repeat(numOfSpace);\n  } else {\n    output = cardNum;\n  }\n  return output;\n};\nexport default fillNumberLength;","map":{"version":3,"names":["fillNumberLength","input","inputLength","cardNumber","replace","cardNum","substring","output","length","numOfSpace","repeat"],"sources":["/Users/aaron/Documents/Aaron/Code/recordRadio/src/utils/fillNumberLength.ts"],"sourcesContent":["\nconst fillNumberLength = (input: string, inputLength: number) => {\n  const cardNumber = input.replace(/\\D/g, \"\");\n\n  // Trim the remaining input to ten characters, to preserve phone number format\n  const cardNum = cardNumber.substring(0, inputLength);\n  let output = \"\";\n  if (cardNum.length < inputLength) {\n    const numOfSpace = inputLength - cardNum.length;\n    output = cardNum + \"*\".repeat(numOfSpace);\n  } else {\n    output = cardNum;\n  }\n  return output;\n};\n\nexport default fillNumberLength;\n"],"mappings":"AACA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAa,EAAEC,WAAmB,EAAK;EAC/D,IAAMC,UAAU,GAAGF,KAAK,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAG3C,IAAMC,OAAO,GAAGF,UAAU,CAACG,SAAS,CAAC,CAAC,EAAEJ,WAAW,CAAC;EACpD,IAAIK,MAAM,GAAG,EAAE;EACf,IAAIF,OAAO,CAACG,MAAM,GAAGN,WAAW,EAAE;IAChC,IAAMO,UAAU,GAAGP,WAAW,GAAGG,OAAO,CAACG,MAAM;IAC/CD,MAAM,GAAGF,OAAO,GAAG,GAAG,CAACK,MAAM,CAACD,UAAU,CAAC;EAC3C,CAAC,MAAM;IACLF,MAAM,GAAGF,OAAO;EAClB;EACA,OAAOE,MAAM;AACf,CAAC;AAED,eAAeP,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}